{"version":3,"sources":["webpack:///webpack/bootstrap 160f982a5871491580ef","webpack:///./Cell.js","webpack:///./Field.js","webpack:///./ScalarField.js","webpack:///./Vector.js","webpack:///./VectorField.js","webpack:///./control/L.Control.ColorBar.js","webpack:///./layer/L.CanvasLayer.Field.js","webpack:///./layer/L.CanvasLayer.ScalarField.js","webpack:///./layer/L.CanvasLayer.SimpleLonLat.js","webpack:///./layer/L.CanvasLayer.VectorFieldAnim.js","webpack:///./layer/L.CanvasLayer.js","webpack:///../~/@turf/inside/index.js","webpack:///../~/@turf/invariant/index.js","webpack:///./_main.js"],"names":["Cell","center","value","xSize","ySize","anotherCell","equals","_equalValues","anotherValue","type","constructor","name","answerFor","Number","Vector","u","v","halfX","halfY","cLat","lat","cLng","lng","ul","L","latLng","lr","latLngBounds","Field","params","nCols","nRows","width","height","xllCorner","yllCorner","xurCorner","yurCorner","cellXSize","cellYSize","grid","isContinuous","longitudeNeedsToBeWrapped","_inFilter","_spatialMask","TypeError","range","_calculateRange","stride","cells","j","i","_lonLatAtIndexes","lon","_valueAtIndexes","c","push","f","_updateRange","m","_getWrappedLongitudes","xmin","xmax","_pointInMask","_pointInExtent","longitudeIn","latitudeIn","pt","geometry","coordinates","properties","poly","inside","contains","notContains","_getDecimalIndexes","interpolatedValueAtIndexes","indexes","_getFourSurroundingIndexes","fi","ci","fj","cj","values","_getFourSurroundingValues","g00","g10","g01","g11","_doInterpolation","Math","floor","_clampColumnIndex","_clampRowIndex","row","_isValid","ii","jj","valueAt","hasValue","included","hasValueAt","o","random","x","_longitudeAtX","y","_latitudeAtY","halfXPixel","halfYPixel","maxCol","maxRow","undefined","ScalarField","asc","scaleFactor","lines","split","_checkIsValidASCIIGridHeader","n","cellSize","parseFloat","match","p","parseInt","noDataValue","toUpperCase","replace","trim","zs","length","line","items","forEach","it","upperCasesLines","map","lin","parameters","expected","found","indexOf","data","bandIndex","tiff","GeoTIFF","parse","image","getImage","rasters","readRasters","tiepoint","getTiePoints","fileDirectory","getFileDirectory","ModelPixelScale","xScale","yScale","GDAL_NODATA","noData","simpleZS","Array","from","z","getWidth","getHeight","bandIndexesRaw","bandIndexes","keys","scalarFields","_buildGrid","_arrayTo2d","array","filter","d3","min","max","rx","ry","sqrt","verticalAngle","atan2","inDegrees","PI","a","directionTo","opposite","VectorField","ascU","ascV","fromASCIIGrid","_paramsFromScalarFields","gtU","gtV","fromGeoTIFF","geotiffData","bandIndexesForUV","us","vs","_getFunctionFor","_applyOnField","uv","func","numCells","_arraysTo2d","valid","vectors","getCells","magnitudes","magnitude","b","d","Control","ColorBar","extend","options","position","margin","background","textColor","steps","decimals","units","title","labels","labelFontSize","labelTextPosition","initialize","color","Util","setOptions","onAdd","_map","div","DomUtil","create","style","padding","DomEvent","addListener","stopPropagation","preventDefault","backgroundColor","cursor","innerHTML","palette","document","createElement","select","append","attr","text","svg","_createSvgIn","_appendColorBarTo","_appendLabelsTo","spaceForLabels","colorPerValue","_getColorPerValue","w","groupBars","buckets","selectAll","enter","hex","toFixed","positionPerLabelValue","_getPositionPerLabelValue","groupLabels","delta","xPositionFor","scaleLinear","domain","positionPerLabel","control","colorBar","CanvasLayer","mouseMoveCursor","noValue","opacity","onClick","onMouseMove","inFilter","field","_visible","setData","getEvents","events","prototype","call","zoomstart","_hideCanvas","bind","zoomend","_showCanvas","onLayerDidMount","_enableIdentify","_ensureCanvasAlignment","show","hide","_disableIdentify","isVisible","_canvas","visibility","on","_onClick","_onMouseMove","off","topLeft","containerPointToLayerPoint","setPosition","onLayerWillUnmount","needRedraw","_field","onDrawLayer","viewInfo","setFilter","fire","setOpacity","_updateOpacity","getBounds","bb","extent","southWest","northEast","bounds","e","_queryValue","_changeCursorOn","getContainer","latlng","result","_getDrawingContext","g","getContext","clearRect","interpolate","vectorSize","arrowDirection","scalarField","_defaultColorScale","chroma","scale","setColor","r","_getRendererMethod","_drawImage","_drawArrows","Error","_ensureColor","ctx","img","createImageData","_prepareImageIn","putImageData","pos","pointCoords","containerPointToLatLng","_getColorFor","rgba","R","G","B","A","_pixelBounds","pixelSize","strokeStyle","currentBounds","cell","_drawArrow","northWest","latLngToContainerPoint","getNorthWest","southEast","getSouthEast","pixelBounds","projected","size","save","translate","rotationRads","rotate","beginPath","moveTo","lineTo","stroke","restore","canvasLayer","SimpleLonLat","points","canvas","fillStyle","point","layer","fillRect","fill","closePath","xs","ys","ymin","ymax","simpleLonLat","lonslats","VectorFieldAnim","paths","fade","duration","maxAge","velocityScale","vectorField","timer","_stopAnimation","_prepareParticlePaths","_moveParticles","_drawParticles","self","par","age","randomPosition","vector","xt","yt","prev","globalCompositeOperation","lineWidth","_drawParticle","source","target","pA","pB","_randomAge","stop","vectorFieldAnim","Layer","_frame","_delegate","delegate","del","requestAnimFrame","drawLayer","_onLayerDidResize","resizeEvent","newSize","_onLayerDidMove","resize","moveend","zoomAnimation","Browser","any3d","zoomanim","_animateZoom","tiles","getSize","animated","addClass","_panes","overlayPane","appendChild","onRemove","getPanes","removeChild","addTo","addLayer","LatLonToMercator","latlon","log","tan","zoom","getZoom","getCenter","corner","getZoomScale","offset","_latLngToNewLayerPoint","setTransform","window","require","console"],"mappings":"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5C,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvGA;AACA;AACA;AACA;AACA,WAAW,6CAA6C;AACxD,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,MAAM;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,cAAc;AACtD,yBAAyB,kBAAkB;AAC3C;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,wBAAwB;AAChE,yBAAyB,kBAAkB;AAC3C;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,aAAa,cAAc;AAC3B,YAAY,MAAM;AAClB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,aAAa,OAAO;AACpB,YAAY,MAAM;AAClB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9MA;AAAA;AACA;AACAuM,OAAOnc,CAAP,CAASV,MAAT,GAAkB,2DAAlB;;AAEA;AACA6c,OAAOnc,CAAP,CAASxB,IAAT,GAAgB,yDAAhB;;AAEA;AACA2d,OAAOnc,CAAP,CAASI,KAAT,GAAiB,0DAAjB;;AAEA;AACA+b,OAAOnc,CAAP,CAASyF,WAAT,GAAuB,gEAAvB;;AAEA;AACA0W,OAAOnc,CAAP,CAASmK,WAAT,GAAuB,gEAAvB;;AAEA;AACA,mBAAAiS,CAAQ,EAAR;AACA,mBAAAA,CAAQ,CAAR;AACA,mBAAAA,CAAQ,CAAR;AACA,mBAAAA,CAAQ,CAAR;AACA,mBAAAA,CAAQ,CAAR;;AAEA;AACA,mBAAAA,CAAQ,CAAR;;AAEA;AACAC,QAAQZ,GAAR,CAAY,kCAAZ;AACA,8B","file":"leaflet.canvaslayer.field.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 160f982a5871491580ef","/**\r\n *  Simple regular cell in a raster\r\n */\r\nexport default class Cell {\r\n    /**\r\n     * A simple cell with a numerical value\r\n     * @param {L.LatLng} center\r\n     * @param {Number|Vector} value\r\n     * @param {Number} xSize\r\n     * @param {Number} ySize\r\n     */\r\n    constructor(center, value, xSize, ySize = xSize) {\r\n        this.center = center;\r\n        this.value = value;\r\n        this.xSize = xSize;\r\n        this.ySize = ySize;\r\n    }\r\n\r\n    equals(anotherCell) {\r\n        return (\r\n            this.center.equals(anotherCell.center) &&\r\n            this._equalValues(this.value, anotherCell.value) &&\r\n            this.xSize === anotherCell.xSize &&\r\n            this.ySize === anotherCell.ySize\r\n        );\r\n    }\r\n\r\n    _equalValues(value, anotherValue) {\r\n        let type = value.constructor.name;\r\n        let answerFor = {\r\n            Number: value === anotherValue,\r\n            Vector: value.u === anotherValue.u && value.v === anotherValue.v\r\n        };\r\n        return answerFor[type];\r\n    }\r\n\r\n    /**\r\n     * Bounds for the cell\r\n     * @returns {LatLngBounds}\r\n     */\r\n    getBounds() {\r\n        let halfX = this.xSize / 2.0;\r\n        let halfY = this.ySize / 2.0;\r\n        let cLat = this.center.lat;\r\n        let cLng = this.center.lng;\r\n        let ul = L.latLng([cLat + halfY, cLng - halfX]);\r\n        let lr = L.latLng([cLat - halfY, cLng + halfX]);\r\n\r\n        return L.latLngBounds(\r\n            L.latLng(lr.lat, ul.lng),\r\n            L.latLng(ul.lat, lr.lng)\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./Cell.js","import Cell from './Cell';\r\nimport inside from '@turf/inside';\r\n\r\n/**\r\n *  Abstract class for a set of values (Vector | Scalar)\r\n *  assigned to a regular 2D-grid (lon-lat), aka 'a Raster source'\r\n */\r\nexport default class Field {\r\n    constructor(params) {\r\n        this.params = params;\r\n\r\n        this.nCols = params['nCols'];\r\n        this.nRows = params['nRows'];\r\n\r\n        // alias\r\n        this.width = params['nCols'];\r\n        this.height = params['nRows'];\r\n\r\n        // ll = lower-left\r\n        this.xllCorner = params['xllCorner'];\r\n        this.yllCorner = params['yllCorner'];\r\n\r\n        // ur = upper-right\r\n        this.xurCorner =\r\n            params['xllCorner'] + params['nCols'] * params['cellXSize'];\r\n        this.yurCorner =\r\n            params['yllCorner'] + params['nRows'] * params['cellYSize'];\r\n\r\n        this.cellXSize = params['cellXSize'];\r\n        this.cellYSize = params['cellYSize'];\r\n\r\n        this.grid = null; // to be defined by subclasses\r\n        this.isContinuous = this.xurCorner - this.xllCorner >= 360;\r\n        this.longitudeNeedsToBeWrapped = this.xurCorner > 180; // [0, 360] --> [-180, 180]\r\n\r\n        this._inFilter = null;\r\n        this._spatialMask = null;\r\n    }\r\n\r\n    /**\r\n     * Builds a grid with a value at each point (either Vector or Number)\r\n     * Original params must include the required input values, following\r\n     * x-ascending & y-descending order (same as in ASCIIGrid)\r\n     * @abstract\r\n     * @private\r\n     * @returns {Array.<Array.<Vector|Number>>} - grid[row][column]--> Vector|Number\r\n     */\r\n    _buildGrid() {\r\n        throw new TypeError('Must be overriden');\r\n    }\r\n\r\n    _updateRange() {\r\n        this.range = this._calculateRange();\r\n    }\r\n\r\n    /**\r\n     * Number of cells in the grid (rows * cols)\r\n     * @returns {Number}\r\n     */\r\n    numCells() {\r\n        return this.nRows * this.nCols;\r\n    }\r\n\r\n    /**\r\n     * A list with every cell\r\n     * @returns {Array<Cell>} - cells (x-ascending & y-descending order)\r\n     */\r\n    getCells(stride = 1) {\r\n        let cells = [];\r\n        for (let j = 0; j < this.nRows; j = j + stride) {\r\n            for (let i = 0; i < this.nCols; i = i + stride) {\r\n                let [lon, lat] = this._lonLatAtIndexes(i, j);\r\n                let center = L.latLng(lat, lon);\r\n                let value = this._valueAtIndexes(i, j);\r\n                let c = new Cell(center, value, this.cellXSize, this.cellYSize);\r\n                cells.push(c); // <<\r\n            }\r\n        }\r\n        return cells;\r\n    }\r\n\r\n    /**\r\n     * Apply a filter function to field values\r\n     * @param   {Function} f - boolean function\r\n     */\r\n    setFilter(f) {\r\n        this._inFilter = f;\r\n        this._updateRange();\r\n    }\r\n\r\n    /**\r\n     * Apply a spatial mask to field values\r\n     * @param {L.GeoJSON} m \r\n     */\r\n    setSpatialMask(m) {\r\n        this._spatialMask = m;\r\n    }\r\n\r\n    /**\r\n     * Grid extent\r\n     * @returns {Number[]} [xmin, ymin, xmax, ymax]\r\n     */\r\n    extent() {\r\n        let [xmin, xmax] = this._getWrappedLongitudes();\r\n        return [xmin, this.yllCorner, xmax, this.yurCorner];\r\n    }\r\n\r\n    /**\r\n     * [xmin, xmax] in [-180, 180] range\r\n     */\r\n    _getWrappedLongitudes() {\r\n        let xmin = this.xllCorner;\r\n        let xmax = this.xurCorner;\r\n\r\n        if (this.longitudeNeedsToBeWrapped) {\r\n            if (this.isContinuous) {\r\n                xmin = -180;\r\n                xmax = 180;\r\n            } else {\r\n                // not sure about this (just one particular case, but others...?)\r\n                xmax = this.xurCorner - 360;\r\n                xmin = this.xllCorner - 360;\r\n                /* eslint-disable no-console */\r\n                // console.warn(`are these xmin: ${xmin} & xmax: ${xmax} OK?`);\r\n                // TODO: Better throw an exception on no-controlled situations.\r\n                /* eslint-enable no-console */\r\n            }\r\n        }\r\n        return [xmin, xmax];\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the grid contains the point, considering\r\n     * the spatialMask if it has been previously set\r\n     * @param   {Number} lon - longitude\r\n     * @param   {Number} lat - latitude\r\n     * @returns {Boolean}\r\n     */\r\n    contains(lon, lat) {\r\n        if (this._spatialMask) {\r\n            return this._pointInMask(lon, lat);\r\n        }\r\n        return this._pointInExtent(lon, lat);\r\n    }\r\n\r\n    /**\r\n     * Checks if coordinates are inside the Extent (considering wrapped longitudes if needed)\r\n     * @param {Number} lon \r\n     * @param {Number} lat \r\n     */\r\n    _pointInExtent(lon, lat) {\r\n        let [xmin, xmax] = this._getWrappedLongitudes();\r\n        let longitudeIn = lon >= xmin && lon <= xmax;\r\n        let latitudeIn = lat >= this.yllCorner && lat <= this.yurCorner;\r\n        return longitudeIn && latitudeIn;\r\n    }\r\n\r\n    /**\r\n     * Check if coordinates are inside the spatialMask (Point in Polygon analysis)\r\n     * @param {Number} lon \r\n     * @param {Number} lat \r\n     */\r\n    _pointInMask(lon, lat) {\r\n        const pt = {\r\n            type: 'Feature',\r\n            geometry: {\r\n                type: 'Point',\r\n                coordinates: [lon, lat] // geojson, lon-lat order !\r\n            },\r\n            properties: {}\r\n        };\r\n        const poly = this._spatialMask;\r\n        return inside(pt, poly);\r\n    }\r\n\r\n    /**\r\n     * Returns if the grid doesn't contain the point\r\n     * @param   {Number} lon - longitude\r\n     * @param   {Number} lat - latitude\r\n     * @returns {Boolean}\r\n     */\r\n    notContains(lon, lat) {\r\n        return !this.contains(lon, lat);\r\n    }\r\n\r\n    /**\r\n     * Interpolated value at lon-lat coordinates (bilinear method)\r\n     * @param   {Number} longitude\r\n     * @param   {Number} latitude\r\n     * @returns {Vector|Number} [u, v, magnitude]\r\n     *                          \r\n     * Source: https://github.com/cambecc/earth > product.js\r\n     */\r\n    interpolatedValueAt(lon, lat) {\r\n        if (this.notContains(lon, lat)) return null;\r\n\r\n        let [i, j] = this._getDecimalIndexes(lon, lat);\r\n        return this.interpolatedValueAtIndexes(i, j);\r\n    }\r\n\r\n    /**\r\n     * Interpolated value at i-j indexes (bilinear method)\r\n     * @param   {Number} i\r\n     * @param   {Number} j\r\n     * @returns {Vector|Number} [u, v, magnitude]\r\n     *\r\n     * Source: https://github.com/cambecc/earth > product.js\r\n     */\r\n    interpolatedValueAtIndexes(i, j) {\r\n        //         1      2           After converting λ and φ to fractional grid indexes i and j, we find the\r\n        //        fi  i   ci          four points 'G' that enclose point (i, j). These points are at the four\r\n        //         | =1.4 |           corners specified by the floor and ceiling of i and j. For example, given\r\n        //      ---G--|---G--- fj 8   i = 1.4 and j = 8.3, the four surrounding grid points are (1, 8), (2, 8),\r\n        //    j ___|_ .   |           (1, 9) and (2, 9).\r\n        //  =8.3   |      |\r\n        //      ---G------G--- cj 9   Note that for wrapped grids, the first column is duplicated as the last\r\n        //         |      |           column, so the index ci can be used without taking a modulo.\r\n\r\n        let indexes = this._getFourSurroundingIndexes(i, j);\r\n        let [fi, ci, fj, cj] = indexes;\r\n        let values = this._getFourSurroundingValues(fi, ci, fj, cj);\r\n        if (values) {\r\n            let [g00, g10, g01, g11] = values;\r\n            return this._doInterpolation(i - fi, j - fj, g00, g10, g01, g11);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Get decimal indexes\r\n     * @private\r\n     * @param {Number} lon\r\n     * @param {Number} lat\r\n     * @returns {Array}    [[Description]]\r\n     */\r\n    _getDecimalIndexes(lon, lat) {\r\n        if (this.longitudeNeedsToBeWrapped && lon < this.xllCorner) {\r\n            lon = lon + 360;\r\n        }\r\n        let i = (lon - this.xllCorner) / this.cellXSize;\r\n        let j = (this.yurCorner - lat) / this.cellYSize;\r\n        return [i, j];\r\n    }\r\n\r\n    /**\r\n     * Get surrounding indexes (integer), clampling on borders\r\n     * @private\r\n     * @param   {Number} i - decimal index\r\n     * @param   {Number} j - decimal index\r\n     * @returns {Array} [fi, ci, fj, cj]\r\n     */\r\n    _getFourSurroundingIndexes(i, j) {\r\n        let fi = Math.floor(i);\r\n        let ci = fi + 1;\r\n        // duplicate colum to simplify interpolation logic (wrapped value)\r\n        if (this.isContinuous && ci >= this.nCols) {\r\n            ci = 0;\r\n        }\r\n        ci = this._clampColumnIndex(ci);\r\n\r\n        let fj = this._clampRowIndex(Math.floor(j));\r\n        let cj = this._clampRowIndex(fj + 1);\r\n\r\n        return [fi, ci, fj, cj];\r\n    }\r\n\r\n    /**\r\n     * Get four surrounding values or null if not available,\r\n     * from 4 integer indexes\r\n     * @private\r\n     * @param   {Number} fi\r\n     * @param   {Number} ci\r\n     * @param   {Number} fj\r\n     * @param   {Number} cj\r\n     * @returns {Array} \r\n     */\r\n    _getFourSurroundingValues(fi, ci, fj, cj) {\r\n        var row;\r\n        if ((row = this.grid[fj])) {\r\n            // upper row ^^\r\n            var g00 = row[fi]; // << left\r\n            var g10 = row[ci]; // right >>\r\n            if (\r\n                this._isValid(g00) &&\r\n                this._isValid(g10) &&\r\n                (row = this.grid[cj])\r\n            ) {\r\n                // lower row vv\r\n                var g01 = row[fi]; // << left\r\n                var g11 = row[ci]; // right >>\r\n                if (this._isValid(g01) && this._isValid(g11)) {\r\n                    return [g00, g10, g01, g11]; // 4 values found!\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Nearest value at lon-lat coordinates\r\n     * @param   {Number} longitude\r\n     * @param   {Number} latitude\r\n     * @returns {Vector|Number}\r\n     */\r\n    valueAt(lon, lat) {\r\n        if (this.notContains(lon, lat)) return null;\r\n\r\n        let [i, j] = this._getDecimalIndexes(lon, lat);\r\n        let ii = Math.floor(i);\r\n        let jj = Math.floor(j);\r\n\r\n        const ci = this._clampColumnIndex(ii);\r\n        const cj = this._clampRowIndex(jj);\r\n\r\n        let value = this._valueAtIndexes(ci, cj);\r\n        if (this._inFilter) {\r\n            if (!this._inFilter(value)) return null;\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the field has a value at the point\r\n     * @param   {Number} lon - longitude\r\n     * @param   {Number} lat - latitude\r\n     * @returns {Boolean}\r\n     */\r\n    hasValueAt(lon, lat) {\r\n        let value = this.valueAt(lon, lat);\r\n        let hasValue = value !== null;\r\n\r\n        let included = true;\r\n        if (this._inFilter) {\r\n            included = this._inFilter(value);\r\n        }\r\n        return hasValue && included;\r\n    }\r\n\r\n    /**\r\n     * Returns if the grid has no value at the point\r\n     * @param   {Number} lon - longitude\r\n     * @param   {Number} lat - latitude\r\n     * @returns {Boolean}\r\n     */\r\n    notHasValueAt(lon, lat) {\r\n        return !this.hasValueAt(lon, lat);\r\n    }\r\n\r\n    /**\r\n     * Gives a random position to 'o' inside the grid\r\n     * @param {Object} [o] - an object (eg. a particle)\r\n     * @returns {{x: Number, y: Number}} - object with x, y (lon, lat)\r\n     */\r\n    randomPosition(o = {}) {\r\n        let i = (Math.random() * this.nCols) | 0;\r\n        let j = (Math.random() * this.nRows) | 0;\r\n\r\n        o.x = this._longitudeAtX(i);\r\n        o.y = this._latitudeAtY(j);\r\n\r\n        return o;\r\n    }\r\n\r\n    /**\r\n     * Value for grid indexes\r\n     * @param   {Number} i - column index (integer)\r\n     * @param   {Number} j - row index (integer)\r\n     * @returns {Vector|Number}\r\n     */\r\n    _valueAtIndexes(i, j) {\r\n        return this.grid[j][i]; // <-- j,i !!\r\n    }\r\n\r\n    /**\r\n     * Lon-Lat for grid indexes\r\n     * @param   {Number} i - column index (integer)\r\n     * @param   {Number} j - row index (integer)\r\n     * @returns {Number[]} [lon, lat]\r\n     */\r\n    _lonLatAtIndexes(i, j) {\r\n        let lon = this._longitudeAtX(i);\r\n        let lat = this._latitudeAtY(j);\r\n\r\n        return [lon, lat];\r\n    }\r\n\r\n    /**\r\n     * Longitude for grid-index\r\n     * @param   {Number} i - column index (integer)\r\n     * @returns {Number} longitude at the center of the cell\r\n     */\r\n    _longitudeAtX(i) {\r\n        let halfXPixel = this.cellXSize / 2.0;\r\n        let lon = this.xllCorner + halfXPixel + i * this.cellXSize;\r\n        if (this.longitudeNeedsToBeWrapped) {\r\n            lon = lon > 180 ? lon - 360 : lon;\r\n        }\r\n        return lon;\r\n    }\r\n\r\n    /**\r\n     * Latitude for grid-index\r\n     * @param   {Number} j - row index (integer)\r\n     * @returns {Number} latitude at the center of the cell\r\n     */\r\n    _latitudeAtY(j) {\r\n        let halfYPixel = this.cellYSize / 2.0;\r\n        return this.yurCorner - halfYPixel - j * this.cellYSize;\r\n    }\r\n\r\n    /**\r\n     * Apply the interpolation\r\n     * @abstract\r\n     * @private\r\n     */\r\n    /* eslint-disable no-unused-vars */\r\n    _doInterpolation(x, y, g00, g10, g01, g11) {\r\n        throw new TypeError('Must be overriden');\r\n    }\r\n    /* eslint-disable no-unused-vars */\r\n\r\n    /**\r\n     * Check the column index is inside the field,\r\n     * adjusting to min or max when needed\r\n     * @private\r\n     * @param   {Number} ii - index\r\n     * @returns {Number} i - inside the allowed indexes\r\n     */\r\n    _clampColumnIndex(ii) {\r\n        let i = ii;\r\n        if (ii < 0) {\r\n            i = 0;\r\n        }\r\n        let maxCol = this.nCols - 1;\r\n        if (ii > maxCol) {\r\n            i = maxCol;\r\n        }\r\n        return i;\r\n    }\r\n\r\n    /**\r\n     * Check the row index is inside the field,\r\n     * adjusting to min or max when needed\r\n     * @private\r\n     * @param   {Number} jj index\r\n     * @returns {Number} j - inside the allowed indexes\r\n     */\r\n    _clampRowIndex(jj) {\r\n        let j = jj;\r\n        if (jj < 0) {\r\n            j = 0;\r\n        }\r\n        let maxRow = this.nRows - 1;\r\n        if (jj > maxRow) {\r\n            j = maxRow;\r\n        }\r\n        return j;\r\n    }\r\n\r\n    /**\r\n     * Is valid (not 'null' nor 'undefined')\r\n     * @private\r\n     * @param   {Object} x object\r\n     * @returns {Boolean}\r\n     */\r\n    _isValid(x) {\r\n        return x !== null && x !== undefined;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./Field.js","import Field from './Field';\r\n\r\n/**\r\n * Scalar Field\r\n */\r\nexport default class ScalarField extends Field {\r\n    /**\r\n     * Creates a ScalarField from the content of an ASCIIGrid file\r\n     * @param   {String}   asc\r\n     * @returns {ScalarField}\r\n     */\r\n    static fromASCIIGrid(asc, scaleFactor = 1) {\r\n        //console.time('ScalarField from ASC');\r\n\r\n        let lines = asc.split('\\n');\r\n\r\n        // Header\r\n        ScalarField._checkIsValidASCIIGridHeader(lines);\r\n\r\n        let n = /-?(?:0|[1-9]\\d*)(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/; // any number\r\n\r\n        const cellSize = parseFloat(lines[4].match(n)); // right now, no different x-y size is allowed\r\n        let p = {\r\n            nCols: parseInt(lines[0].match(n)),\r\n            nRows: parseInt(lines[1].match(n)),\r\n            xllCorner: parseFloat(lines[2].match(n)),\r\n            yllCorner: parseFloat(lines[3].match(n)),\r\n            cellXSize: cellSize,\r\n            cellYSize: cellSize\r\n        };\r\n        let noDataValue = lines[5]\r\n            .toUpperCase()\r\n            .replace('NODATA_VALUE', '')\r\n            .trim();\r\n\r\n        // Data (left-right and top-down)\r\n        let zs = []; // TODO Consider using TypedArray (& manage NO_DATA)\r\n        for (let i = 6; i < lines.length; i++) {\r\n            let line = lines[i].trim();\r\n            if (line === '') break;\r\n\r\n            let items = line.split(' ');\r\n            items.forEach(it => {\r\n                const v =\r\n                    it !== noDataValue ? parseFloat(it * scaleFactor) : null;\r\n                zs.push(v);\r\n            });\r\n        }\r\n        p.zs = zs;\r\n\r\n        //console.timeEnd('ScalarField from ASC');\r\n        return new ScalarField(p);\r\n    }\r\n\r\n    static _checkIsValidASCIIGridHeader(lines) {\r\n        const upperCasesLines = lines.map(lin => lin.toUpperCase());\r\n\r\n        const parameters = [\r\n            'NCOLS',\r\n            'NROWS',\r\n            'XLLCORNER',\r\n            'YLLCORNER',\r\n            'CELLSIZE',\r\n            'NODATA_VALUE'\r\n        ];\r\n\r\n        let i = 0;\r\n        for (let expected of parameters) {\r\n            let line = upperCasesLines[i];\r\n            let found = line.indexOf(expected) != -1;\r\n            if (!found) {\r\n                throw `Not valid ASCIIGrid: expected '${expected}' at line '${line}' [lin. nº ${i}]`;\r\n            }\r\n            i++;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates a ScalarField from the content of a GeoTIFF file, as read by geotiff.js\r\n     * @param   {ArrayBuffer}   data\r\n     * @param   {Number}   bandIndex\r\n     * @returns {ScalarField}\r\n     */\r\n    static fromGeoTIFF(data, bandIndex = 0) {\r\n        //console.time('ScalarField from GeoTIFF');\r\n\r\n        let tiff = GeoTIFF.parse(data); // geotiff.js\r\n        let image = tiff.getImage();\r\n        let rasters = image.readRasters();\r\n        let tiepoint = image.getTiePoints()[0];\r\n        let fileDirectory = image.getFileDirectory();\r\n        let [xScale, yScale] = fileDirectory.ModelPixelScale;\r\n\r\n        let zs = rasters[bandIndex]; // left-right and top-down order\r\n\r\n        if (fileDirectory.GDAL_NODATA) {\r\n            let noData = parseFloat(fileDirectory.GDAL_NODATA);\r\n            // console.log(noData);\r\n            let simpleZS = Array.from(zs); // to simple array, so null is allowed | TODO efficiency??\r\n            zs = simpleZS.map(function(z) {\r\n                return z === noData ? null : z;\r\n            });\r\n        }\r\n\r\n        let p = {\r\n            nCols: image.getWidth(),\r\n            nRows: image.getHeight(),\r\n            xllCorner: tiepoint.x,\r\n            yllCorner: tiepoint.y - image.getHeight() * yScale,\r\n            cellXSize: xScale,\r\n            cellYSize: yScale,\r\n            zs: zs\r\n        };\r\n\r\n        //console.timeEnd('ScalarField from GeoTIFF');\r\n        return new ScalarField(p);\r\n    }\r\n\r\n    /**\r\n     * Creates a ScalarField array from the content of a GeoTIFF file, as read by geotiff.js\r\n     * @param   {ArrayBuffer}   data\r\n     * @param   {Array}   bandIndex - If not provided all bands are returned\r\n     * @returns {ScalarField array}\r\n     */\r\n    static multipleFromGeoTIFF(data, bandIndexesRaw) {\r\n        //console.time('ScalarField from GeoTIFF');\r\n\r\n        let tiff = GeoTIFF.parse(data); // geotiff.js\r\n        let image = tiff.getImage();\r\n        let rasters = image.readRasters();\r\n        let tiepoint = image.getTiePoints()[0];\r\n        let fileDirectory = image.getFileDirectory();\r\n        let [xScale, yScale] = fileDirectory.ModelPixelScale;\r\n\r\n        let bandIndexes = bandIndexesRaw;\r\n        if (typeof bandIndexes === 'undefined' || bandIndexes.length === 0) {\r\n            bandIndexes = [...Array(rasters.length).keys()];\r\n        }\r\n\r\n        let scalarFields = [];\r\n        scalarFields = bandIndexes.map(function(bandIndex) {\r\n            let zs = rasters[bandIndex]; // left-right and top-down order\r\n\r\n            if (fileDirectory.GDAL_NODATA) {\r\n                let noData = parseFloat(fileDirectory.GDAL_NODATA);\r\n                // console.log(noData);\r\n                let simpleZS = Array.from(zs); // to simple array, so null is allowed | TODO efficiency??\r\n                zs = simpleZS.map(function(z) {\r\n                    return z === noData ? null : z;\r\n                });\r\n            }\r\n\r\n            let p = {\r\n                nCols: image.getWidth(),\r\n                nRows: image.getHeight(),\r\n                xllCorner: tiepoint.x,\r\n                yllCorner: tiepoint.y - image.getHeight() * yScale,\r\n                cellXSize: xScale,\r\n                cellYSize: yScale,\r\n                zs: zs\r\n            };\r\n            return new ScalarField(p);\r\n        });\r\n\r\n        //console.timeEnd('ScalarField from GeoTIFF');\r\n        return scalarFields;\r\n    }\r\n\r\n    constructor(params) {\r\n        super(params);\r\n        this.zs = params['zs'];\r\n\r\n        this.grid = this._buildGrid();\r\n        this._updateRange();\r\n        //console.log(`ScalarField created (${this.nCols} x ${this.nRows})`);\r\n    }\r\n\r\n    /**\r\n     * Builds a grid with a Number at each point, from an array\r\n     * 'zs' following x-ascending & y-descending order\r\n     * (same as in ASCIIGrid)\r\n     * @private\r\n     * @returns {Array.<Array.<Number>>} - grid[row][column]--> Number\r\n     */\r\n    _buildGrid() {\r\n        let grid = this._arrayTo2d(this.zs, this.nRows, this.nCols);\r\n        return grid;\r\n    }\r\n\r\n    _arrayTo2d(array, nRows, nCols) {\r\n        let grid = [];\r\n        let p = 0;\r\n        for (var j = 0; j < nRows; j++) {\r\n            var row = [];\r\n            for (var i = 0; i < nCols; i++, p++) {\r\n                let z = array[p];\r\n                row[i] = this._isValid(z) ? z : null; // <<<\r\n            }\r\n            grid[j] = row;\r\n        }\r\n        return grid;\r\n    }\r\n\r\n    _newDataArrays(params) {\r\n        params['zs'] = [];\r\n    }\r\n\r\n    _pushValueToArrays(params, value) {\r\n        params['zs'].push(value);\r\n    }\r\n\r\n    _makeNewFrom(params) {\r\n        return new ScalarField(params);\r\n    }\r\n\r\n    /**\r\n     * Calculate min & max values\r\n     * @private\r\n     * @returns {Array} - [min, max]\r\n     */\r\n    _calculateRange() {\r\n        var data = this.zs;\r\n        if (this._inFilter) {\r\n            data = data.filter(this._inFilter);\r\n        }\r\n        return [d3.min(data), d3.max(data)];\r\n    }\r\n\r\n    /**\r\n     * Bilinear interpolation for Number\r\n     * https://en.wikipedia.org/wiki/Bilinear_interpolation\r\n     * @param   {Number} x\r\n     * @param   {Number} y\r\n     * @param   {Number} g00\r\n     * @param   {Number} g10\r\n     * @param   {Number} g01\r\n     * @param   {Number} g11\r\n     * @returns {Number}\r\n     */\r\n    _doInterpolation(x, y, g00, g10, g01, g11) {\r\n        var rx = 1 - x;\r\n        var ry = 1 - y;\r\n        return g00 * rx * ry + g10 * x * ry + g01 * rx * y + g11 * x * y;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ScalarField.js","/**\r\n *  2D Vector\r\n */\r\nexport default class Vector {\r\n\r\n    constructor(u, v) {\r\n        this.u = u;\r\n        this.v = v;\r\n    }\r\n\r\n    /**\r\n     * Magnitude\r\n     * @returns {Number}\r\n     */\r\n    magnitude() {\r\n        return Math.sqrt(this.u * this.u + this.v * this.v);\r\n    }\r\n\r\n    /**\r\n     * Angle in degrees (0 to 360º) --> Towards\r\n     * N is 0º and E is 90º\r\n     * @returns {Number}\r\n     */\r\n    directionTo() {\r\n        let verticalAngle = Math.atan2(this.u, this.v);\r\n        let inDegrees = verticalAngle * (180.0 / Math.PI);\r\n        if (inDegrees < 0) {\r\n            inDegrees = inDegrees + 360.0;\r\n        }\r\n        return inDegrees;\r\n    }\r\n\r\n    /**\r\n     * Angle in degrees (0 to 360º) From x-->\r\n     * N is 0º and E is 90º\r\n     * @returns {Number}\r\n     */\r\n    directionFrom() {\r\n        let a = this.directionTo();\r\n        let opposite = (a + 180.0) % 360.0;\r\n        return opposite;\r\n    }\r\n\r\n    /*\r\n        Degrees --> text\r\n        new Dictionary<int, string>\r\n        {\r\n            //{0, 23, 45, 68, 90, 113, 135, 158, 180, 203, 225, 248, 270, 293, 315, 338, 360};\r\n            {0, 'N'},\r\n            {23, 'NNE'},\r\n            {45, 'NE'},\r\n            {68, 'ENE'},\r\n            {90, 'E'},\r\n            {113, 'ESE'},\r\n            {135, 'SE'},\r\n            {158, 'SSE'},\r\n            {180, 'S'},\r\n            {203, 'SSW'},\r\n            {225, 'SW'},\r\n            {248, 'WSW'},\r\n            {270, 'W'},\r\n            {293, 'WNW'},\r\n            {315, 'NW'},\r\n            {338, 'NNW'},\r\n            {360, 'N'}\r\n        };\r\n    */\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./Vector.js","import Vector from './Vector';\r\nimport Field from './Field';\r\nimport ScalarField from './ScalarField';\r\n\r\n/**\r\n *  A set of vectors assigned to a regular 2D-grid (lon-lat)\r\n *  (e.g. a raster representing winds for a region)\r\n */\r\nexport default class VectorField extends Field {\r\n    /**\r\n     * Creates a VectorField from the content of two ASCIIGrid files\r\n     * @param   {String} ascU - with u-component\r\n     * @param   {String} ascV - with v-component\r\n     * @returns {VectorField}\r\n     */\r\n    static fromASCIIGrids(ascU, ascV, scaleFactor = 1) {\r\n        let u = ScalarField.fromASCIIGrid(ascU, scaleFactor);\r\n        let v = ScalarField.fromASCIIGrid(ascV, scaleFactor);\r\n        let p = VectorField._paramsFromScalarFields(u, v);\r\n\r\n        return new VectorField(p);\r\n    }\r\n\r\n    /**\r\n     * Creates a VectorField from the content of two different Geotiff files\r\n     * @param   {ArrayBuffer} gtU - geotiff data with u-component (band 0)\r\n     * @param   {ArrayBuffer} gtV - geotiff data with v-component (band 0)\r\n     * @returns {VectorField}\r\n     */\r\n    static fromGeoTIFFs(gtU, gtV) {\r\n        let u = ScalarField.fromGeoTIFF(gtU);\r\n        let v = ScalarField.fromGeoTIFF(gtV);\r\n        let p = VectorField._paramsFromScalarFields(u, v);\r\n\r\n        return new VectorField(p);\r\n    }\r\n\r\n    /**\r\n     * Creates a VectorField from the content of Multiband Geotiff\r\n     * @param   {ArrayBuffer} geotiffData - multiband\r\n     * @param   {Array} bandIndexesForUV\r\n     * @returns {VectorField}\r\n     */\r\n    static fromMultibandGeoTIFF(geotiffData, bandIndexesForUV = [0, 1]) {\r\n        let u = ScalarField.fromGeoTIFF(geotiffData, bandIndexesForUV[0]);\r\n        let v = ScalarField.fromGeoTIFF(geotiffData, bandIndexesForUV[1]);\r\n        let p = VectorField._paramsFromScalarFields(u, v);\r\n\r\n        return new VectorField(p);\r\n    }\r\n\r\n    /**\r\n     * Build parameters for VectorField, from 2 ScalarFields.\r\n     * No validation at all (nor interpolation) is applied, so u and v\r\n     * must be 'compatible' from the source\r\n     * @param   {ScalarField} u\r\n     * @param   {ScalarField} v\r\n     * @returns {Object} - parameters to build VectorField\r\n     */\r\n    static _paramsFromScalarFields(u, v) {\r\n        // TODO check u & v compatibility (cellSize...)\r\n        let p = {\r\n            nCols: u.nCols,\r\n            nRows: u.nRows,\r\n            xllCorner: u.xllCorner,\r\n            yllCorner: u.yllCorner,\r\n            cellXSize: u.cellXSize,\r\n            cellYSize: u.cellYSize,\r\n            us: u.zs,\r\n            vs: v.zs\r\n        };\r\n        return p;\r\n    }\r\n\r\n    constructor(params) {\r\n        super(params);\r\n\r\n        this.us = params['us'];\r\n        this.vs = params['vs'];\r\n        this.grid = this._buildGrid();\r\n        this.range = this._calculateRange();\r\n    }\r\n\r\n    /**\r\n     * Get a derived field, from a computation on \r\n     * the VectorField\r\n     * @param   {String} type ['magnitude' | 'directionTo' | 'directionFrom']\r\n     * @returns {ScalarField}\r\n     */\r\n    getScalarField(type) {\r\n        let f = this._getFunctionFor(type);\r\n        let p = {\r\n            nCols: this.params.nCols,\r\n            nRows: this.params.nRows,\r\n            xllCorner: this.params.xllCorner,\r\n            yllCorner: this.params.yllCorner,\r\n            cellXSize: this.params.cellXSize,\r\n            cellYSize: this.params.cellYSize,\r\n            zs: this._applyOnField(f)\r\n        };\r\n        return new ScalarField(p);\r\n    }\r\n\r\n    _getFunctionFor(type) {\r\n        return function(u, v) {\r\n            let uv = new Vector(u, v);\r\n            return uv[type](); // magnitude, directionTo, directionFrom\r\n        };\r\n    }\r\n\r\n    _applyOnField(func) {\r\n        let zs = [];\r\n        let n = this.numCells();\r\n        for (var i = 0; i < n; i++) {\r\n            let u = this.us[i];\r\n            let v = this.vs[i];\r\n            if (this._isValid(u) && this._isValid(v)) {\r\n                zs.push(func(u, v));\r\n            } else {\r\n                zs.push(null);\r\n            }\r\n        }\r\n        return zs;\r\n    }\r\n\r\n    /**\r\n     * Builds a grid with a Vector at each point, from two arrays\r\n     * 'us' and 'vs' following x-ascending & y-descending order\r\n     * (same as in ASCIIGrid)\r\n     * @returns {Array.<Array.<Vector>>} - grid[row][column]--> Vector\r\n     */\r\n    _buildGrid() {\r\n        let grid = this._arraysTo2d(this.us, this.vs, this.nRows, this.nCols);\r\n        return grid;\r\n    }\r\n\r\n    _arraysTo2d(us, vs, nRows, nCols) {\r\n        let grid = [];\r\n        let p = 0;\r\n\r\n        for (var j = 0; j < nRows; j++) {\r\n            var row = [];\r\n            for (var i = 0; i < nCols; i++, p++) {\r\n                let u = us[p],\r\n                    v = vs[p];\r\n                let valid = this._isValid(u) && this._isValid(v);\r\n                row[i] = valid ? new Vector(u, v) : null; // <<<\r\n            }\r\n            grid[j] = row;\r\n        }\r\n        return grid;\r\n    }\r\n\r\n    _newDataArrays(params) {\r\n        params['us'] = [];\r\n        params['vs'] = [];\r\n    }\r\n    _pushValueToArrays(params, value) {\r\n        //console.log(value);\r\n        params['us'].push(value.u);\r\n        params['vs'].push(value.v);\r\n    }\r\n    _makeNewFrom(params) {\r\n        return new VectorField(params);\r\n    }\r\n\r\n    /**\r\n     * Calculate min & max values (magnitude)\r\n     * @private\r\n     * @returns {Array}\r\n     */\r\n    _calculateRange() {\r\n        // TODO make a clearer method for getting these vectors...\r\n        let vectors = this.getCells().map(pt => pt.value).filter(function(v) {\r\n            return v !== null;\r\n        });\r\n\r\n        if (this._inFilter) {\r\n            vectors = vectors.filter(this._inFilter);\r\n        }\r\n\r\n        // TODO check memory crash with high num of vectors!\r\n        let magnitudes = vectors.map(v => v.magnitude());\r\n        let min = d3.min(magnitudes);\r\n        let max = d3.max(magnitudes);\r\n\r\n        return [min, max];\r\n    }\r\n\r\n    /**\r\n     * Bilinear interpolation for Vector\r\n     * https://en.wikipedia.org/wiki/Bilinear_interpolation\r\n     * @param   {Number} x\r\n     * @param   {Number} y\r\n     * @param   {Number[]} g00\r\n     * @param   {Number[]} g10\r\n     * @param   {Number[]} g01\r\n     * @param   {Number[]} g11\r\n     * @returns {Vector}\r\n     */\r\n    _doInterpolation(x, y, g00, g10, g01, g11) {\r\n        var rx = 1 - x;\r\n        var ry = 1 - y;\r\n        var a = rx * ry,\r\n            b = x * ry,\r\n            c = rx * y,\r\n            d = x * y;\r\n        var u = g00.u * a + g10.u * b + g01.u * c + g11.u * d;\r\n        var v = g00.v * a + g10.v * b + g01.v * c + g11.v * d;\r\n        return new Vector(u, v);\r\n    }\r\n\r\n    /**\r\n     * Is valid (not 'null' nor 'undefined')\r\n     * @private\r\n     * @param   {Object} x object\r\n     * @returns {Boolean}\r\n     */\r\n    _isValid(x) {\r\n        return x !== null && x !== undefined;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./VectorField.js","/**\r\n *   Control for a simple legend with a colorbar\r\n *   References:\r\n *      - http://jsfiddle.net/ramnathv/g8stqcf6/\r\n *      - http://jsfiddle.net/vis4/cYLZH/\r\n */\r\nL.Control.ColorBar = L.Control.extend({\r\n    options: {\r\n        position: 'bottomleft',\r\n        width: 300, // for colorbar itself (control is wider)\r\n        height: 15,\r\n        margin: 15,\r\n        background: '#fff',\r\n        textColor: 'black',\r\n        steps: 100,\r\n        decimals: 2,\r\n        units: 'uds', // ej: m/s\r\n        title: 'Legend', // ej: Ocean Currents\r\n        labels: [], // empty for no labels\r\n        labelFontSize: 10,\r\n        labelTextPosition: 'middle' // start | middle | end\r\n    },\r\n\r\n    initialize: function(color, range, options) {\r\n        this.color = color; // 'chromajs' scale function\r\n        this.range = range; // [min, max]\r\n        L.Util.setOptions(this, options);\r\n    },\r\n\r\n    onAdd: function(map) {\r\n        this._map = map;\r\n        let div = L.DomUtil.create(\r\n            'div',\r\n            'leaflet-control-colorBar leaflet-bar leaflet-control'\r\n        );\r\n        div.style.padding = '10px';\r\n\r\n        L.DomEvent\r\n            .addListener(div, 'click', L.DomEvent.stopPropagation)\r\n            .addListener(div, 'click', L.DomEvent.preventDefault);\r\n        div.style.backgroundColor = this.options.background;\r\n        div.style.cursor = 'text';\r\n        div.innerHTML = this.title() + this.palette();\r\n        return div;\r\n    },\r\n\r\n    title: function() {\r\n        let d = document.createElement('div');\r\n        d3\r\n            .select(d)\r\n            .append('span')\r\n            .style('color', this.options.textColor)\r\n            .style('display', 'block')\r\n            .style('margin-bottom', '5px')\r\n            .attr('class', 'leaflet-control-colorBar-title')\r\n            .text(this.options.title);\r\n        return d.innerHTML;\r\n    },\r\n\r\n    palette: function() {\r\n        let d = document.createElement('div');\r\n        let svg = this._createSvgIn(d);\r\n\r\n        this._appendColorBarTo(svg);\r\n\r\n        if (this.options.labels) {\r\n            this._appendLabelsTo(svg);\r\n        }\r\n\r\n        return d.innerHTML;\r\n    },\r\n\r\n    _createSvgIn: function(d) {\r\n        let spaceForLabels = this.options.labels ? this.options.margin : 0;\r\n        let svg = d3\r\n            .select(d)\r\n            .append('svg')\r\n            .attr('width', this.options.width + this.options.margin * 2)\r\n            .attr('height', this.options.height + spaceForLabels);\r\n        return svg;\r\n    },\r\n\r\n    _appendColorBarTo: function(svg) {\r\n        const colorPerValue = this._getColorPerValue();\r\n        const w = this.options.width / colorPerValue.length;\r\n\r\n        let groupBars = svg.append('g').attr('id', 'colorBar-buckets');\r\n        let buckets = groupBars\r\n            .selectAll('rect')\r\n            .data(colorPerValue)\r\n            .enter()\r\n            .append('rect');\r\n        buckets\r\n            .attr('x', (d, i) => i * w + this.options.margin)\r\n            .attr('y', () => 0)\r\n            .attr('height', () => this.options.height /*w * 4*/)\r\n            .attr('width', () => w)\r\n            .attr('stroke-width', 2)\r\n            .attr('stroke-linecap', 'butt')\r\n            .attr('stroke', d => d.color.hex())\r\n            .attr('fill', d => d.color.hex());\r\n        buckets\r\n            .append('title')\r\n            .text(\r\n                d =>\r\n                    `${d.value.toFixed(this.options.decimals)} ${this.options\r\n                        .units}`\r\n            );\r\n    },\r\n\r\n    _appendLabelsTo: function(svg) {\r\n        const positionPerLabelValue = this._getPositionPerLabelValue();\r\n        //const w = this.options.width / colorPerValue.length;\r\n        let groupLabels = svg.append('g').attr('id', 'colorBar-labels');\r\n        let labels = groupLabels\r\n            .selectAll('text')\r\n            .data(positionPerLabelValue)\r\n            .enter()\r\n            .append('text');\r\n        labels\r\n            .attr('x', d => d.position + this.options.margin)\r\n            .attr('y', this.options.height + this.options.margin)\r\n            .attr('font-size', `${this.options.labelFontSize}px`)\r\n            .attr('text-anchor', this.options.labelTextPosition)\r\n            .attr('fill', this.options.textColor)\r\n            .attr('class', 'leaflet-control-colorBar-label')\r\n            .text(d => `${d.value.toFixed(this.options.decimals)}`);\r\n    },\r\n\r\n    _getColorPerValue: function() {\r\n        const [min, max] = this.range;\r\n        let delta = (max - min) / this.options.steps;\r\n        let data = d3.range(min, max + delta, delta);\r\n        let colorPerValue = data.map(d => {\r\n            return {\r\n                value: d,\r\n                color: this.color(d)\r\n            };\r\n        });\r\n        return colorPerValue;\r\n    },\r\n\r\n    _getPositionPerLabelValue: function() {\r\n        var xPositionFor = d3\r\n            .scaleLinear()\r\n            .range([0, this.options.width])\r\n            .domain(this.range);\r\n        let data = this.options.labels;\r\n        let positionPerLabel = data.map(d => {\r\n            return {\r\n                value: d,\r\n                position: xPositionFor(d)\r\n            };\r\n        });\r\n        return positionPerLabel;\r\n    }\r\n});\r\n\r\nL.control.colorBar = function(color, range, options) {\r\n    return new L.Control.ColorBar(color, range, options);\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./control/L.Control.ColorBar.js","/**\r\n * Abstract class for a Field layer on canvas, aka 'a Raster layer'\r\n * (ScalarField or a VectorField)\r\n */\r\nL.CanvasLayer.Field = L.CanvasLayer.extend({\r\n    options: {\r\n        mouseMoveCursor: {\r\n            value: 'pointer',\r\n            noValue: 'default'\r\n        },\r\n        opacity: 1,\r\n        onClick: null,\r\n        onMouseMove: null,\r\n        inFilter: null\r\n    },\r\n\r\n    initialize: function(field, options) {\r\n        L.Util.setOptions(this, options);\r\n        this._visible = true;\r\n        if (field) {\r\n            this.setData(field);\r\n        }\r\n    },\r\n\r\n    getEvents: function() {\r\n        var events = L.CanvasLayer.prototype.getEvents.call(this);\r\n        events.zoomstart = this._hideCanvas.bind(this);\r\n        events.zoomend = this._showCanvas.bind(this);\r\n        return events;\r\n    },\r\n\r\n    onLayerDidMount: function() {\r\n        this._enableIdentify();\r\n        this._ensureCanvasAlignment();\r\n    },\r\n\r\n    show() {\r\n        this._visible = true;\r\n        this._showCanvas();\r\n        this._enableIdentify();\r\n    },\r\n\r\n    hide() {\r\n        this._visible = false;\r\n        this._hideCanvas();\r\n        this._disableIdentify();\r\n    },\r\n\r\n    isVisible() {\r\n        return this._visible;\r\n    },\r\n\r\n    _showCanvas() {\r\n        if (this._canvas && this._visible) {\r\n            this._canvas.style.visibility = 'visible';\r\n        }\r\n    },\r\n\r\n    _hideCanvas() {\r\n        if (this._canvas) {\r\n            this._canvas.style.visibility = 'hidden';\r\n        }\r\n    },\r\n\r\n    _enableIdentify() {\r\n        this._map.on('click', this._onClick, this);\r\n        this._map.on('mousemove', this._onMouseMove, this);\r\n\r\n        this.options.onClick && this.on('click', this.options.onClick, this);\r\n        this.options.onMouseMove &&\r\n            this.on('mousemove', this.options.onMouseMove, this);\r\n    },\r\n\r\n    _disableIdentify() {\r\n        this._map.off('click', this._onClick, this);\r\n        this._map.off('mousemove', this._onMouseMove, this);\r\n\r\n        this.options.onClick && this.off('click', this.options.onClick, this);\r\n        this.options.onMouseMove &&\r\n            this.off('mousemove', this.options.onMouseMove, this);\r\n    },\r\n\r\n    _ensureCanvasAlignment() {\r\n        var topLeft = this._map.containerPointToLayerPoint([0, 0]);\r\n        L.DomUtil.setPosition(this._canvas, topLeft);\r\n    },\r\n\r\n    onLayerWillUnmount: function() {\r\n        this._disableIdentify();\r\n    },\r\n\r\n    needRedraw() {\r\n        if (this._map && this._field) {\r\n            L.CanvasLayer.prototype.needRedraw.call(this);\r\n        }\r\n    },\r\n\r\n    /* eslint-disable no-unused-vars */\r\n    onDrawLayer: function(viewInfo) {\r\n        throw new TypeError('Must be overriden');\r\n    },\r\n    /* eslint-enable no-unused-vars */\r\n\r\n    setData: function(field) {\r\n        this.options.inFilter && field.setFilter(this.options.inFilter);\r\n        this._field = field;\r\n        this.needRedraw();\r\n        this.fire('load');\r\n    },\r\n\r\n    setFilter: function(f) {\r\n        this.options.inFilter = f;\r\n        this._field && this._field.setFilter(f);\r\n        this.needRedraw();\r\n    },\r\n\r\n    setOpacity: function(opacity) {\r\n        this.options.opacity = opacity;\r\n\r\n        if (this._canvas) {\r\n            this._updateOpacity();\r\n        }\r\n        return this;\r\n    },\r\n\r\n    getBounds: function() {\r\n        let bb = this._field.extent();\r\n\r\n        let southWest = L.latLng(bb[1], bb[0]),\r\n            northEast = L.latLng(bb[3], bb[2]);\r\n        let bounds = L.latLngBounds(southWest, northEast);\r\n        return bounds;\r\n    },\r\n\r\n    _onClick: function(e) {\r\n        let v = this._queryValue(e);\r\n        this.fire('click', v);\r\n    },\r\n\r\n    _onMouseMove: function(e) {\r\n        let v = this._queryValue(e);\r\n        this._changeCursorOn(v);\r\n        this.fire('mousemove', v);\r\n    },\r\n\r\n    _changeCursorOn: function(v) {\r\n        if (!this.options.mouseMoveCursor) return;\r\n\r\n        let { value, noValue } = this.options.mouseMoveCursor;\r\n        let style = this._map.getContainer().style;\r\n        style.cursor = v.value !== null ? value : noValue;\r\n    },\r\n\r\n    _updateOpacity: function() {\r\n        L.DomUtil.setOpacity(this._canvas, this.options.opacity);\r\n    },\r\n\r\n    _queryValue: function(e) {\r\n        let v = this._field\r\n            ? this._field.valueAt(e.latlng.lng, e.latlng.lat)\r\n            : null;\r\n        let result = {\r\n            latlng: e.latlng,\r\n            value: v\r\n        };\r\n        return result;\r\n    },\r\n\r\n    _getDrawingContext: function() {\r\n        let g = this._canvas.getContext('2d');\r\n        g.clearRect(0, 0, this._canvas.width, this._canvas.height);\r\n        return g;\r\n    }\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./layer/L.CanvasLayer.Field.js","import Cell from '../Cell';\r\n\r\n/**\r\n * ScalarField on canvas (a 'Raster')\r\n */\r\nL.CanvasLayer.ScalarField = L.CanvasLayer.Field.extend({\r\n    options: {\r\n        type: 'colormap', // [colormap|vector]\r\n        color: null, // function colorFor(value) [e.g. chromajs.scale],\r\n        interpolate: false, // Change to use interpolation\r\n        vectorSize: 20, // only used if 'vector'\r\n        arrowDirection: 'from' // [from|towards]\r\n    },\r\n\r\n    initialize: function(scalarField, options) {\r\n        L.CanvasLayer.Field.prototype.initialize.call(\r\n            this,\r\n            scalarField,\r\n            options\r\n        );\r\n        L.Util.setOptions(this, options);\r\n    },\r\n\r\n    _defaultColorScale: function() {\r\n        return chroma.scale(['white', 'black']).domain(this._field.range);\r\n    },\r\n\r\n    setColor(f) {\r\n        this.options.color = f;\r\n        this.needRedraw();\r\n    },\r\n\r\n    /* eslint-disable no-unused-vars */\r\n    onDrawLayer: function(viewInfo) {\r\n        if (!this.isVisible()) return;\r\n        this._updateOpacity();\r\n\r\n        let r = this._getRendererMethod();\r\n        //console.time('onDrawLayer');\r\n        r();\r\n        //console.timeEnd('onDrawLayer');\r\n    },\r\n    /* eslint-enable no-unused-vars */\r\n\r\n    _getRendererMethod: function() {\r\n        switch (this.options.type) {\r\n            case 'colormap':\r\n                return this._drawImage.bind(this);\r\n            case 'vector':\r\n                return this._drawArrows.bind(this);\r\n            default:\r\n                throw Error(`Unkwown renderer type: ${this.options.type}`);\r\n        }\r\n    },\r\n\r\n    _ensureColor: function() {\r\n        if (this.options.color === null) {\r\n            this.setColor(this._defaultColorScale());\r\n        }\r\n    },\r\n\r\n    _showCanvas() {\r\n        L.CanvasLayer.Field.prototype._showCanvas.call(this);\r\n        this.needRedraw(); // TODO check spurious redraw (e.g. hide/show without moving map)\r\n    },\r\n\r\n    /**\r\n     * Draws the field in an ImageData and applying it with putImageData.\r\n     * Used as a reference: http://geoexamples.com/d3-raster-tools-docs/code_samples/raster-pixels-page.html\r\n     */\r\n    _drawImage: function() {\r\n        this._ensureColor();\r\n\r\n        let ctx = this._getDrawingContext();\r\n        let width = this._canvas.width;\r\n        let height = this._canvas.height;\r\n\r\n        let img = ctx.createImageData(width, height);\r\n        let data = img.data;\r\n\r\n        this._prepareImageIn(data, width, height);\r\n        ctx.putImageData(img, 0, 0);\r\n    },\r\n\r\n    /**\r\n     * Prepares the image in data, as array with RGBAs\r\n     * [R1, G1, B1, A1, R2, G2, B2, A2...]\r\n     * @private\r\n     * @param {[[Type]]} data   [[Description]]\r\n     * @param {Numver} width\r\n     * @param {Number} height\r\n     */\r\n    _prepareImageIn(data, width, height) {\r\n        let f = this.options.interpolate ? 'interpolatedValueAt' : 'valueAt';\r\n\r\n        let pos = 0;\r\n        for (let j = 0; j < height; j++) {\r\n            for (let i = 0; i < width; i++) {\r\n                let pointCoords = this._map.containerPointToLatLng([i, j]);\r\n                let lon = pointCoords.lng;\r\n                let lat = pointCoords.lat;\r\n\r\n                let v = this._field[f](lon, lat); // 'valueAt' | 'interpolatedValueAt' || TODO check some 'artifacts'\r\n                if (v !== null) {\r\n                    let color = this._getColorFor(v);\r\n                    let [R, G, B, A] = color.rgba();\r\n                    data[pos] = R;\r\n                    data[pos + 1] = G;\r\n                    data[pos + 2] = B;\r\n                    data[pos + 3] = parseInt(A * 255); // not percent in alpha but hex 0-255\r\n                }\r\n                pos = pos + 4;\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Draws the field as a set of arrows. Direction from 0 to 360 is assumed.\r\n     */\r\n    _drawArrows: function() {\r\n        const bounds = this._pixelBounds();\r\n        const pixelSize = (bounds.max.x - bounds.min.x) / this._field.nCols;\r\n\r\n        var stride = Math.max(\r\n            1,\r\n            Math.floor(1.2 * this.options.vectorSize / pixelSize)\r\n        );\r\n\r\n        const ctx = this._getDrawingContext();\r\n        ctx.strokeStyle = this.options.color;\r\n\r\n        var currentBounds = this._map.getBounds();\r\n\r\n        for (var y = 0; y < this._field.height; y = y + stride) {\r\n            for (var x = 0; x < this._field.width; x = x + stride) {\r\n                let [lon, lat] = this._field._lonLatAtIndexes(x, y);\r\n                let v = this._field.valueAt(lon, lat);\r\n                let center = L.latLng(lat, lon);\r\n                if (v !== null && currentBounds.contains(center)) {\r\n                    let cell = new Cell(\r\n                        center,\r\n                        v,\r\n                        this.cellXSize,\r\n                        this.cellYSize\r\n                    );\r\n                    this._drawArrow(cell, ctx);\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    _pixelBounds: function() {\r\n        const bounds = this.getBounds();\r\n        const northWest = this._map.latLngToContainerPoint(\r\n            bounds.getNorthWest()\r\n        );\r\n        const southEast = this._map.latLngToContainerPoint(\r\n            bounds.getSouthEast()\r\n        );\r\n        var pixelBounds = L.bounds(northWest, southEast);\r\n        return pixelBounds;\r\n    },\r\n\r\n    _drawArrow: function(cell, ctx) {\r\n        var projected = this._map.latLngToContainerPoint(cell.center);\r\n\r\n        // colormap vs. simple color\r\n        let color = this.options.color;\r\n        if (typeof color === 'function') {\r\n            ctx.strokeStyle = color(cell.value);\r\n        }\r\n\r\n        const size = this.options.vectorSize;\r\n        ctx.save();\r\n\r\n        ctx.translate(projected.x, projected.y);\r\n\r\n        let rotationRads = (90 + cell.value) * Math.PI / 180; // from, by default\r\n        if (this.options.arrowDirection === 'towards') {\r\n            rotationRads = rotationRads + Math.PI;\r\n        }\r\n        ctx.rotate(rotationRads);\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(-size / 2, 0);\r\n        ctx.lineTo(+size / 2, 0);\r\n        ctx.moveTo(size * 0.25, -size * 0.25);\r\n        ctx.lineTo(+size / 2, 0);\r\n        ctx.lineTo(size * 0.25, size * 0.25);\r\n        ctx.stroke();\r\n        ctx.restore();\r\n    },\r\n\r\n    /**\r\n     * Gets a chroma color for a pixel value, according to 'options.color'\r\n     */\r\n    _getColorFor(v) {\r\n        let c = this.options.color; // e.g. for a constant 'red'\r\n        if (typeof c === 'function') {\r\n            c = this.options.color(v);\r\n        }\r\n        let color = chroma(c); // to be more flexible, a chroma color object is always created || TODO improve efficiency\r\n        return color;\r\n    }\r\n});\r\n\r\nL.canvasLayer.scalarField = function(scalarField, options) {\r\n    return new L.CanvasLayer.ScalarField(scalarField, options);\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./layer/L.CanvasLayer.ScalarField.js","/**\r\n *  Simple layer with lon-lat points\r\n *\r\n *  TODO rename to SimplePoint?\r\n */\r\nL.CanvasLayer.SimpleLonLat = L.CanvasLayer.extend({\r\n    options: {\r\n        color: 'gray'\r\n    },\r\n\r\n    initialize: function(points, options) {\r\n        this.points = points;\r\n        L.Util.setOptions(this, options);\r\n    },\r\n\r\n    onLayerDidMount: function() {\r\n        // -- prepare custom drawing\r\n    },\r\n\r\n    onLayerWillUnmount: function() {\r\n        // -- custom cleanup\r\n    },\r\n\r\n    /* eslint-disable no-unused-vars */\r\n    setData: function(data) {\r\n        // -- custom data set\r\n        this.needRedraw(); // -- call to drawLayer\r\n    },\r\n    /* eslint-enable no-unused-vars */\r\n\r\n    onDrawLayer: function(viewInfo) {\r\n        // canvas preparation\r\n        let g = viewInfo.canvas.getContext('2d');\r\n        g.clearRect(0, 0, viewInfo.canvas.width, viewInfo.canvas.height);\r\n        g.fillStyle = this.options.color;\r\n\r\n        for (let point of this.points) {\r\n            let p = viewInfo.layer._map.latLngToContainerPoint(point);\r\n            g.beginPath();\r\n            //g.arc(p.x, p.y, 1, 0, Math.PI * 2); // circle | TODO style 'function' as parameter?\r\n            g.fillRect(p.x, p.y, 2, 2); //simple point\r\n            g.fill();\r\n            g.closePath();\r\n            g.stroke();\r\n        }\r\n    },\r\n\r\n    getBounds: function() {\r\n        // TODO: bounding with points...\r\n        let xs = this.points.map(pt => pt.lng);\r\n        let ys = this.points.map(pt => pt.lat);\r\n\r\n        let xmin = Math.min(...xs);\r\n        let ymin = Math.min(...ys);\r\n        let xmax = Math.max(...xs);\r\n        let ymax = Math.max(...ys);\r\n\r\n        let southWest = L.latLng(ymin, xmin),\r\n            northEast = L.latLng(ymax, xmax);\r\n        let bounds = L.latLngBounds(southWest, northEast); // TODO FIX ERROR ? half-pixel?\r\n        return bounds;\r\n    }\r\n});\r\n\r\nL.canvasLayer.simpleLonLat = function(lonslats, options) {\r\n    return new L.CanvasLayer.SimpleLonLat(lonslats, options);\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./layer/L.CanvasLayer.SimpleLonLat.js","/**\r\n * Animated VectorField on canvas\r\n */\r\nL.CanvasLayer.VectorFieldAnim = L.CanvasLayer.Field.extend({\r\n    options: {\r\n        paths: 800,\r\n        color: 'white', // html-color | function colorFor(value) [e.g. chromajs.scale]\r\n        width: 1.0, // number | function widthFor(value)\r\n        fade: 0.96, // 0 to 1\r\n        duration: 20, // milliseconds per 'frame'\r\n        maxAge: 200, // number of maximum frames per path\r\n        velocityScale: 1 / 5000\r\n    },\r\n\r\n    initialize: function(vectorField, options) {\r\n        L.CanvasLayer.Field.prototype.initialize.call(\r\n            this,\r\n            vectorField,\r\n            options\r\n        );\r\n        L.Util.setOptions(this, options);\r\n\r\n        this.timer = null;\r\n    },\r\n\r\n    onLayerDidMount: function() {\r\n        L.CanvasLayer.Field.prototype.onLayerDidMount.call(this);\r\n        this._map.on('move resize', this._stopAnimation, this);\r\n    },\r\n\r\n    onLayerWillUnmount: function() {\r\n        L.CanvasLayer.Field.prototype.onLayerWillUnmount.call(this);\r\n        this._map.off('move resize', this._stopAnimation, this);\r\n        this._stopAnimation();\r\n    },\r\n\r\n    _hideCanvas: function _showCanvas() {\r\n        L.CanvasLayer.Field.prototype._hideCanvas.call(this);\r\n        this._stopAnimation();\r\n    },\r\n\r\n    onDrawLayer: function(viewInfo) {\r\n        if (!this._field || !this.isVisible()) return;\r\n\r\n        this._updateOpacity();\r\n\r\n        let ctx = this._getDrawingContext();\r\n        let paths = this._prepareParticlePaths();\r\n\r\n        this.timer = d3.timer(function() {\r\n            _moveParticles();\r\n            _drawParticles();\r\n        }, this.options.duration);\r\n\r\n        let self = this;\r\n\r\n        /**\r\n         * Builds the paths, adding 'particles' on each animation step, considering\r\n         * their properties (age / position source > target)\r\n         */\r\n        function _moveParticles() {\r\n            // let screenFactor = 1 / self._map.getZoom(); // consider using a 'screenFactor' to ponderate velocityScale\r\n            paths.forEach(function(par) {\r\n                if (par.age > self.options.maxAge) {\r\n                    // restart, on a random x,y\r\n                    par.age = 0;\r\n                    self._field.randomPosition(par);\r\n                }\r\n\r\n                let vector = self._field.valueAt(par.x, par.y);\r\n                if (vector === null) {\r\n                    par.age = self.options.maxAge;\r\n                } else {\r\n                    // the next point will be...\r\n                    let xt = par.x + vector.u * self.options.velocityScale; //* screenFactor;\r\n                    let yt = par.y + vector.v * self.options.velocityScale; //* screenFactor;\r\n\r\n                    if (self._field.hasValueAt(xt, yt)) {\r\n                        par.xt = xt;\r\n                        par.yt = yt;\r\n                        par.m = vector.magnitude();\r\n                    } else {\r\n                        // not visible anymore...\r\n                        par.age = self.options.maxAge;\r\n                    }\r\n                }\r\n                par.age += 1;\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Draws the paths on each step\r\n         */\r\n        function _drawParticles() {\r\n            // Previous paths...\r\n            let prev = ctx.globalCompositeOperation;\r\n            ctx.globalCompositeOperation = 'destination-in';\r\n            ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n            //ctx.globalCompositeOperation = 'source-over';\r\n            ctx.globalCompositeOperation = prev;\r\n\r\n            // fading paths...\r\n            ctx.fillStyle = `rgba(0, 0, 0, ${self.options.fade})`;\r\n            ctx.lineWidth = self.options.width;\r\n            ctx.strokeStyle = self.options.color;\r\n\r\n            // New paths\r\n            paths.forEach(function(par) {\r\n                self._drawParticle(viewInfo, ctx, par);\r\n            });\r\n        }\r\n    },\r\n\r\n    _drawParticle(viewInfo, ctx, par) {\r\n        let source = new L.latLng(par.y, par.x);\r\n        let target = new L.latLng(par.yt, par.xt);\r\n\r\n        if (\r\n            viewInfo.bounds.contains(source) &&\r\n            par.age <= this.options.maxAge\r\n        ) {\r\n            let pA = viewInfo.layer._map.latLngToContainerPoint(source);\r\n            let pB = viewInfo.layer._map.latLngToContainerPoint(target);\r\n\r\n            ctx.beginPath();\r\n            ctx.moveTo(pA.x, pA.y);\r\n            ctx.lineTo(pB.x, pB.y);\r\n\r\n            // next-step movement\r\n            par.x = par.xt;\r\n            par.y = par.yt;\r\n\r\n            // colormap vs. simple color\r\n            let color = this.options.color;\r\n            if (typeof color === 'function') {\r\n                ctx.strokeStyle = color(par.m);\r\n            }\r\n\r\n            let width = this.options.width;\r\n            if (typeof width === 'function') {\r\n                ctx.lineWidth = width(par.m);\r\n            }\r\n\r\n            ctx.stroke();\r\n        }\r\n    },\r\n\r\n    _prepareParticlePaths: function() {\r\n        let paths = [];\r\n\r\n        for (var i = 0; i < this.options.paths; i++) {\r\n            let p = this._field.randomPosition();\r\n            p.age = this._randomAge();\r\n            paths.push(p);\r\n        }\r\n        return paths;\r\n    },\r\n\r\n    _randomAge: function() {\r\n        return Math.floor(Math.random() * this.options.maxAge);\r\n    },\r\n\r\n    _stopAnimation: function() {\r\n        if (this.timer) {\r\n            this.timer.stop();\r\n        }\r\n    }\r\n});\r\n\r\nL.canvasLayer.vectorFieldAnim = function(vectorField, options) {\r\n    return new L.CanvasLayer.VectorFieldAnim(vectorField, options);\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./layer/L.CanvasLayer.VectorFieldAnim.js","/*\r\n  1.0.1 (downloaded from https://github.com/Sumbera/gLayers.Leaflet/releases/tag/v1.0.1)\r\n\r\n  Generic  Canvas Layer for leaflet 0.7 and 1.0-rc,\r\n  copyright Stanislav Sumbera,  2016 , sumbera.com , license MIT\r\n  originally created and motivated by L.CanvasOverlay  available here: https://gist.github.com/Sumbera/11114288\r\n*/\r\n\r\nL.CanvasLayer = L.Layer.extend({\r\n    // -- initialized is called on prototype\r\n    initialize: function (options) {\r\n        this._map = null;\r\n        this._canvas = null;\r\n        this._frame = null;\r\n        this._delegate = null;\r\n        L.setOptions(this, options);\r\n    },\r\n\r\n    delegate: function (del) {\r\n        this._delegate = del;\r\n        return this;\r\n    },\r\n\r\n    needRedraw: function () {\r\n        if (!this._frame) {\r\n            this._frame = L.Util.requestAnimFrame(this.drawLayer, this);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    //-------------------------------------------------------------\r\n    _onLayerDidResize: function (resizeEvent) {\r\n        this._canvas.width = resizeEvent.newSize.x;\r\n        this._canvas.height = resizeEvent.newSize.y;\r\n    },\r\n    //-------------------------------------------------------------\r\n    _onLayerDidMove: function () {\r\n        var topLeft = this._map.containerPointToLayerPoint([0, 0]);\r\n        L.DomUtil.setPosition(this._canvas, topLeft);\r\n        this.drawLayer();\r\n    },\r\n    //-------------------------------------------------------------\r\n    getEvents: function () {\r\n        var events = {\r\n            resize: this._onLayerDidResize,\r\n            moveend: this._onLayerDidMove\r\n        };\r\n        if (this._map.options.zoomAnimation && L.Browser.any3d) {\r\n            events.zoomanim = this._animateZoom;\r\n        }\r\n\r\n        return events;\r\n    },\r\n    //-------------------------------------------------------------\r\n    onAdd: function (map) {\r\n        this._map = map;\r\n        this._canvas = L.DomUtil.create('canvas', 'leaflet-layer');\r\n        this.tiles = {};\r\n\r\n        var size = this._map.getSize();\r\n        this._canvas.width = size.x;\r\n        this._canvas.height = size.y;\r\n\r\n        var animated = this._map.options.zoomAnimation && L.Browser.any3d;\r\n        L.DomUtil.addClass(this._canvas, 'leaflet-zoom-' + (animated ? 'animated' : 'hide'));\r\n\r\n\r\n        map._panes.overlayPane.appendChild(this._canvas);\r\n\r\n        map.on(this.getEvents(), this);\r\n\r\n        var del = this._delegate || this;\r\n        del.onLayerDidMount && del.onLayerDidMount(); // -- callback\r\n\r\n        this.needRedraw();\r\n    },\r\n\r\n    //-------------------------------------------------------------\r\n    onRemove: function (map) {\r\n        var del = this._delegate || this;\r\n        del.onLayerWillUnmount && del.onLayerWillUnmount(); // -- callback\r\n\r\n\r\n        map.getPanes().overlayPane.removeChild(this._canvas);\r\n\r\n        map.off(this.getEvents(), this);\r\n\r\n        this._canvas = null;\r\n\r\n    },\r\n\r\n    //------------------------------------------------------------\r\n    addTo: function (map) {\r\n        map.addLayer(this);\r\n        return this;\r\n    },\r\n    // --------------------------------------------------------------------------------\r\n    LatLonToMercator: function (latlon) {\r\n        return {\r\n            x: latlon.lng * 6378137 * Math.PI / 180,\r\n            y: Math.log(Math.tan((90 + latlon.lat) * Math.PI / 360)) * 6378137\r\n        };\r\n    },\r\n\r\n    //------------------------------------------------------------------------------\r\n    drawLayer: function () {\r\n        // -- todo make the viewInfo properties  flat objects.\r\n        var size = this._map.getSize();\r\n        var bounds = this._map.getBounds();\r\n        var zoom = this._map.getZoom();\r\n\r\n        var center = this.LatLonToMercator(this._map.getCenter());\r\n        var corner = this.LatLonToMercator(this._map.containerPointToLatLng(this._map.getSize()));\r\n\r\n        var del = this._delegate || this;\r\n        del.onDrawLayer && del.onDrawLayer({\r\n            layer: this,\r\n            canvas: this._canvas,\r\n            bounds: bounds,\r\n            size: size,\r\n            zoom: zoom,\r\n            center: center,\r\n            corner: corner\r\n        });\r\n        this._frame = null;\r\n    },\r\n\r\n    //------------------------------------------------------------------------------\r\n    _animateZoom: function (e) {\r\n        var scale = this._map.getZoomScale(e.zoom);\r\n        var offset = this._map._latLngToNewLayerPoint(this._map.getBounds().getNorthWest(), e.zoom, e.center);\r\n\r\n        L.DomUtil.setTransform(this._canvas, offset, scale);\r\n    }\r\n});\r\n\r\nL.canvasLayer = function () {\r\n    return new L.CanvasLayer();\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./layer/L.CanvasLayer.js","var invariant = require('@turf/invariant');\nvar getCoord = invariant.getCoord;\nvar getCoords = invariant.getCoords;\n\n// http://en.wikipedia.org/wiki/Even%E2%80%93odd_rule\n// modified from: https://github.com/substack/point-in-polygon/blob/master/index.js\n// which was modified from http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n\n/**\n * Takes a {@link Point} and a {@link Polygon} or {@link MultiPolygon} and determines if the point resides inside the polygon. The polygon can\n * be convex or concave. The function accounts for holes.\n *\n * @name inside\n * @param {Feature<Point>} point input point\n * @param {Feature<Polygon|MultiPolygon>} polygon input polygon or multipolygon\n * @param {boolean} [ignoreBoundary=false] True if polygon boundary should be ignored when determining if the point is inside the polygon otherwise false.\n * @returns {boolean} `true` if the Point is inside the Polygon; `false` if the Point is not inside the Polygon\n * @example\n * var pt = turf.point([-77, 44]);\n * var poly = turf.polygon([[\n *   [-81, 41],\n *   [-81, 47],\n *   [-72, 47],\n *   [-72, 41],\n *   [-81, 41]\n * ]]);\n *\n * turf.inside(pt, poly);\n * //= true\n */\nmodule.exports = function (point, polygon, ignoreBoundary) {\n    // validation\n    if (!point) throw new Error('point is required');\n    if (!polygon) throw new Error('polygon is required');\n\n    var pt = getCoord(point);\n    var polys = getCoords(polygon);\n    var type = (polygon.geometry) ? polygon.geometry.type : polygon.type;\n    var bbox = polygon.bbox;\n\n    // Quick elimination if point is not inside bbox\n    if (bbox && inBBox(pt, bbox) === false) return false;\n\n    // normalize to multipolygon\n    if (type === 'Polygon') polys = [polys];\n\n    for (var i = 0, insidePoly = false; i < polys.length && !insidePoly; i++) {\n        // check if it is in the outer ring first\n        if (inRing(pt, polys[i][0], ignoreBoundary)) {\n            var inHole = false;\n            var k = 1;\n            // check for the point in any of the holes\n            while (k < polys[i].length && !inHole) {\n                if (inRing(pt, polys[i][k], !ignoreBoundary)) {\n                    inHole = true;\n                }\n                k++;\n            }\n            if (!inHole) insidePoly = true;\n        }\n    }\n    return insidePoly;\n};\n\n/**\n * inRing\n *\n * @private\n * @param {[number, number]} pt [x,y]\n * @param {Array<[number, number]>} ring [[x,y], [x,y],..]\n * @param {boolean} ignoreBoundary ignoreBoundary\n * @returns {boolean} inRing\n */\nfunction inRing(pt, ring, ignoreBoundary) {\n    var isInside = false;\n    if (ring[0][0] === ring[ring.length - 1][0] && ring[0][1] === ring[ring.length - 1][1]) ring = ring.slice(0, ring.length - 1);\n\n    for (var i = 0, j = ring.length - 1; i < ring.length; j = i++) {\n        var xi = ring[i][0], yi = ring[i][1];\n        var xj = ring[j][0], yj = ring[j][1];\n        var onBoundary = (pt[1] * (xi - xj) + yi * (xj - pt[0]) + yj * (pt[0] - xi) === 0) &&\n            ((xi - pt[0]) * (xj - pt[0]) <= 0) && ((yi - pt[1]) * (yj - pt[1]) <= 0);\n        if (onBoundary) return !ignoreBoundary;\n        var intersect = ((yi > pt[1]) !== (yj > pt[1])) &&\n        (pt[0] < (xj - xi) * (pt[1] - yi) / (yj - yi) + xi);\n        if (intersect) isInside = !isInside;\n    }\n    return isInside;\n}\n\n/**\n * inBBox\n *\n * @private\n * @param {[number, number]} pt point [x,y]\n * @param {[number, number, number, number]} bbox BBox [west, south, east, north]\n * @returns {boolean} true/false if point is inside BBox\n */\nfunction inBBox(pt, bbox) {\n    return bbox[0] <= pt[0] &&\n           bbox[1] <= pt[1] &&\n           bbox[2] >= pt[0] &&\n           bbox[3] >= pt[1];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/@turf/inside/index.js\n// module id = 11\n// module chunks = 0","/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} obj Object\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nfunction getCoord(obj) {\n    if (!obj) throw new Error('obj is required');\n\n    var coordinates = getCoords(obj);\n\n    // getCoord() must contain at least two numbers (Point)\n    if (coordinates.length > 1 &&\n        typeof coordinates[0] === 'number' &&\n        typeof coordinates[1] === 'number') {\n        return coordinates;\n    } else {\n        throw new Error('Coordinate is not a valid Point');\n    }\n}\n\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array of numbers\n *\n * @name getCoords\n * @param {Array<number>|Geometry|Feature} obj Object\n * @returns {Array<number>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coord = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nfunction getCoords(obj) {\n    if (!obj) throw new Error('obj is required');\n    var coordinates;\n\n    // Array of numbers\n    if (obj.length) {\n        coordinates = obj;\n\n    // Geometry Object\n    } else if (obj.coordinates) {\n        coordinates = obj.coordinates;\n\n    // Feature\n    } else if (obj.geometry && obj.geometry.coordinates) {\n        coordinates = obj.geometry.coordinates;\n    }\n    // Checks if coordinates contains a number\n    if (coordinates) {\n        containsNumber(coordinates);\n        return coordinates;\n    }\n    throw new Error('No valid coordinates');\n}\n\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nfunction containsNumber(coordinates) {\n    if (coordinates.length > 1 &&\n        typeof coordinates[0] === 'number' &&\n        typeof coordinates[1] === 'number') {\n        return true;\n    }\n\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error('coordinates must only contain numbers');\n}\n\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction geojsonType(value, type, name) {\n    if (!type || !name) throw new Error('type and name required');\n\n    if (!value || value.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + value.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nfunction featureOf(feature, type, name) {\n    if (!feature) throw new Error('No feature passed');\n    if (!name) throw new Error('.featureOf() requires a name');\n    if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n        throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction collectionOf(featureCollection, type, name) {\n    if (!featureCollection) throw new Error('No featureCollection passed');\n    if (!name) throw new Error('.collectionOf() requires a name');\n    if (!featureCollection || featureCollection.type !== 'FeatureCollection') {\n        throw new Error('Invalid input to ' + name + ', FeatureCollection required');\n    }\n    for (var i = 0; i < featureCollection.features.length; i++) {\n        var feature = featureCollection.features[i];\n        if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n            throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n        }\n    }\n}\n\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nfunction getGeom(geojson) {\n    if (!geojson) throw new Error('geojson is required');\n    if (geojson.geometry !== undefined) return geojson.geometry;\n    if (geojson.coordinates || geojson.geometries) return geojson;\n    throw new Error('geojson must be a valid Feature or Geometry Object');\n}\n\n/**\n * Get Geometry Type from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {string} GeoJSON Geometry Type\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeomType(point)\n * //=\"Point\"\n */\nfunction getGeomType(geojson) {\n    if (!geojson) throw new Error('geojson is required');\n    var geom = getGeom(geojson);\n    if (geom) return geom.type;\n}\n\nmodule.exports = {\n    geojsonType: geojsonType,\n    collectionOf: collectionOf,\n    featureOf: featureOf,\n    getCoord: getCoord,\n    getCoords: getCoords,\n    containsNumber: containsNumber,\n    getGeom: getGeom,\n    getGeomType: getGeomType\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/@turf/invariant/index.js\n// module id = 12\n// module chunks = 0","// base\r\nimport Vector from './Vector.js';\r\nwindow.L.Vector = Vector;\r\n\r\nimport Cell from './Cell.js';\r\nwindow.L.Cell = Cell;\r\n\r\nimport Field from './Field.js';\r\nwindow.L.Field = Field;\r\n\r\nimport ScalarField from './ScalarField.js';\r\nwindow.L.ScalarField = ScalarField;\r\n\r\nimport VectorField from './VectorField.js';\r\nwindow.L.VectorField = VectorField;\r\n\r\n// layer\r\nrequire('./layer/L.CanvasLayer.js');\r\nrequire('./layer/L.CanvasLayer.SimpleLonLat.js');\r\nrequire('./layer/L.CanvasLayer.Field.js');\r\nrequire('./layer/L.CanvasLayer.ScalarField.js');\r\nrequire('./layer/L.CanvasLayer.VectorFieldAnim.js');\r\n\r\n// control\r\nrequire('./control/L.Control.ColorBar.js');\r\n\r\n/* eslint-disable no-console */\r\nconsole.log('leaflet.canvaslayer.field v1.4.1');\r\n/* eslint-enable no-console */\r\n\n\n\n// WEBPACK FOOTER //\n// ./_main.js"],"sourceRoot":""}